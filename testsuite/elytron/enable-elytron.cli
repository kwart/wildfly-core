embed-server --admin-only=true

/core-service=management/access=identity:add(security-domain=ManagementDomain)
/core-service=management/management-interface=http-interface:write-attribute(name=http-upgrade,value={enabled=true, sasl-authentication-factory=management-sasl-authentication})
/core-service=management/management-interface=http-interface:write-attribute(name=http-authentication-factory,value=management-http-authentication)
/core-service=management/management-interface=http-interface:undefine-attribute(name=security-realm)
/core-service=management/security-realm=ManagementRealm:remove
/core-service=management/security-realm=ApplicationRealm/authentication=local:remove
/core-service=management/security-realm=ApplicationRealm/authentication=properties:remove
/core-service=management/security-realm=ApplicationRealm/authorization=properties:remove

# Use filesystem-realm instead of legacy (compatibility mode) properties-realm in default domains
/subsystem=elytron/filesystem-realm=ManagementFsRealm:add(path=mgmt-users,relative-to=jboss.server.config.dir)
/subsystem=elytron/filesystem-realm=ApplicationFsRealm:add(path=application-users,relative-to=jboss.server.config.dir)

/subsystem=elytron/security-domain=ManagementDomain:list-add(name=realms, index=0, value={realm=ManagementFsRealm, role-decoder=groups-to-roles})
/subsystem=elytron/security-domain=ManagementDomain:write-attribute(name=default-realm, value=ManagementFsRealm)

/subsystem=elytron/security-domain=ApplicationDomain:list-add(name=realms, index=0, value={realm=ApplicationFsRealm, role-decoder=groups-to-roles})
/subsystem=elytron/security-domain=ApplicationDomain:write-attribute(name=default-realm, value=ApplicationFsRealm)

# add test users (copies the test configuration from property files)

/subsystem=elytron/filesystem-realm=ManagementFsRealm:add-identity(identity=testsuite)
/subsystem=elytron/filesystem-realm=ManagementFsRealm:set-password(identity=testsuite, clear={password="testSuitePassword"})

# user without credentials - can be used for identity inflow
/subsystem=elytron/filesystem-realm=ManagementFsRealm:add-identity(identity=guest)
/subsystem=elytron/filesystem-realm=ManagementFsRealm:add-identity(identity=jwt)
/subsystem=elytron/filesystem-realm=ManagementFsRealm:add-identity(identity=client)

/subsystem=elytron/filesystem-realm=ApplicationFsRealm:add-identity(identity=user1)
/subsystem=elytron/filesystem-realm=ApplicationFsRealm:set-password(identity=user1, clear={password="password1"})
/subsystem=elytron/filesystem-realm=ApplicationFsRealm:add-identity-attribute(identity=user1, name=groups, value=["Users","Role1"])

/subsystem=elytron/filesystem-realm=ApplicationFsRealm:add-identity(identity=user2)
/subsystem=elytron/filesystem-realm=ApplicationFsRealm:set-password(identity=user2, clear={password="password2"})
/subsystem=elytron/filesystem-realm=ApplicationFsRealm:add-identity-attribute(identity=user2, name=groups, value=["Users","Role2"])

/subsystem=elytron/filesystem-realm=ApplicationFsRealm:add-identity(identity=guest)
/subsystem=elytron/filesystem-realm=ApplicationFsRealm:set-password(identity=guest, clear={password="guest"})
/subsystem=elytron/filesystem-realm=ApplicationFsRealm:add-identity-attribute(identity=guest, name=groups, value=["guest"])

/subsystem=logging/logger=org.jboss.remoting.remote.server:add(level=ALL)
/subsystem=logging/console-handler=CONSOLE:write-attribute(name=level, value=ALL)

stop-embedded-server
